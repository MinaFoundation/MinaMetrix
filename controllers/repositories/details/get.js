const getRepositoryByIdAndFormat = require('../../../utils/getRepositoryByIdAndFormat');

module.exports = (req, res) => {
  getRepositoryByIdAndFormat(req.query.id, (err, data) => {
    if (err) return res.redirect('/error?message=' + err);

    return res.render('repositories/details', {
      page: 'repositories/details',
      title: data.repository.title,
      includes: {
        external: {
          css: ['confirm', 'form', 'formPopUp', 'general', 'header', 'items', 'navbar', 'navigation', 'details', 'text'],
          js: ['createConfirm', 'createFormPopUp', 'navbarListeners', 'page', 'serverRequest']
        }
      },
      latest_update_time: data.repository.latest_update_time,
      repository: {
        general_information: {
          columns: 3,
          title: data.repository.title,
          id: data.repository.github_id,
          language: data.repository.language,
        },
        description: {
          columns: 1,
          description: data.repository.description,
        },
        dates: {
          columns: 3,
          created_at: data.repository.other_urls.created_at,
          updated_at: data.repository.other_urls.updated_at,
          pushed_at: data.repository.other_urls.pushed_at,
        },
        developer_general: {
          columns: 3,
          github_id: data.repository.developer.github_id,
          username: data.repository.developer.login,
          node_id: data.repository.developer.node_id,
          type: data.repository.developer.type,
          site_admin: data.repository.developer.site_admin,
        },
        developer_urls: {
          columns: 1,
          avatar_url: data.repository.developer.avatar_url,
          url: data.repository.developer.url,
          followers_url: data.repository.developer.other_urls.followers_url,
          following_url: data.repository.developer.other_urls.following_url,
          gists_url: data.repository.developer.other_urls.gists_url,
          starred_url: data.repository.developer.other_urls.starred_url,
          subscriptions_url: data.repository.developer.other_urls.subscriptions_url,
          organizations_url: data.repository.developer.other_urls.organizations_url,
          repos_url: data.repository.developer.other_urls.repos_url,
          events_url: data.repository.developer.other_urls.events_url,
          received_events_url: data.repository.developer.other_urls.received_events_url,
        },
        detailed_information: {
          columns: 4,
          has_issues: data.repository.has.has_issues,
          has_projects: data.repository.has.has_projects,
          has_downloads: data.repository.has.has_downloads,
          has_wiki: data.repository.has.has_wiki,
          stargazers_count: data.repository.stargazers_count,
          watchers_count: data.repository.watchers_count,
          forks_count: data.repository.forks_count,
          open_issues_count: data.repository.open_issues_count,
          size: data.repository.size,
          score: data.repository.score,
          homepage: data.repository.homepage,
          default_branch: data.repository.default_branch,
          archived: data.repository.archived,
          disabled: data.repository.disabled,
          is_template: data.repository.is_template,
          allow_forking: data.repository.allow_forking,
          fork: data.repository.fork,
          license: data.repository.license,
          topics: data.repository.topics,
        },
        urls: {
          columns: 1,
          url: data.repository.url,
          forks_url: data.repository.other_urls.forks_url,
          keys_url: data.repository.other_urls.keys_url,
          collaborators_url: data.repository.other_urls.collaborators_url,
          teams_url: data.repository.other_urls.teams_url,
          hooks_url: data.repository.other_urls.hooks_url,
          issue_events_url: data.repository.other_urls.issue_events_url,
          events_url: data.repository.other_urls.events_url,
          assignees_url: data.repository.other_urls.assignees_url,
          branches_url: data.repository.other_urls.branches_url,
          tags_url: data.repository.other_urls.tags_url,
          blobs_url: data.repository.other_urls.blobs_url,
          git_tags_url: data.repository.other_urls.git_tags_url,
          git_refs_url: data.repository.other_urls.git_refs_url,
          trees_url: data.repository.other_urls.trees_url,
          statuses_url: data.repository.other_urls.statuses_url,
          languages_url: data.repository.other_urls.languages_url,
          stargazers_url: data.repository.other_urls.stargazers_url,
          contributors_url: data.repository.other_urls.contributors_url,
          subscribers_url: data.repository.other_urls.subscribers_url,
          subscription_url: data.repository.other_urls.subscription_url,
          commits_url: data.repository.other_urls.commits_url,
          git_commits_url: data.repository.other_urls.git_commits_url,
          comments_url: data.repository.other_urls.comments_url,
          issue_comment_url: data.repository.other_urls.issue_comment_url,
          contents_url: data.repository.other_urls.contents_url,
          compare_url: data.repository.other_urls.compare_url,
          merges_url: data.repository.other_urls.merges_url,
          archive_url: data.repository.other_urls.archive_url,
          downloads_url: data.repository.other_urls.downloads_url,
          issues_url: data.repository.other_urls.issues_url,
          pulls_url: data.repository.other_urls.pulls_url,
          milestones_url: data.repository.other_urls.milestones_url,
          notifications_url: data.repository.other_urls.notifications_url,
          labels_url: data.repository.other_urls.labels_url,
          releases_url: data.repository.other_urls.releases_url,
          deployments_url: data.repository.other_urls.deployments_url,
          git_url: data.repository.other_urls.git_url,
          ssh_url: data.repository.other_urls.ssh_url,
          clone_url: data.repository.other_urls.clone_url,
          svn_url: data.repository.other_urls.svn_url,
        },
      },
      task_id: data.task_id
    });
  });
};